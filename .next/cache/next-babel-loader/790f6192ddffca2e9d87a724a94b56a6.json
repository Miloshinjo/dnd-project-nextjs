{"ast":null,"code":"import { useRef, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst ClientOnlyPortal = ({\n  children,\n  selector\n}) => {\n  const ref = useRef();\n  const {\n    0: mounted,\n    1: setMounted\n  } = useState(false);\n  useEffect(() => {\n    ref.current = document.querySelector(selector);\n    setMounted(true);\n  }, [selector]);\n  return mounted ? /*#__PURE__*/createPortal(children, ref.current) : null;\n};\n\nexport { ClientOnlyPortal as default };","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/utils/clientOnlyPortal.ts"],"names":["useRef","useEffect","useState","createPortal","ClientOnlyPortal","children","selector","ref","mounted","setMounted","current","document","querySelector","default"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,YAAT,QAA6B,WAA7B;;AAMA,MAAMC,gBAAiC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AACpE,QAAMC,GAAG,GAAGP,MAAM,EAAlB;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,GAAG,CAACG,OAAJ,GAAcC,QAAQ,CAACC,aAAT,CAAuBN,QAAvB,CAAd;AACAG,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHQ,EAGN,CAACH,QAAD,CAHM,CAAT;AAKA,SAAOE,OAAO,gBAAGL,YAAY,CAACE,QAAD,EAAWE,GAAG,CAACG,OAAf,CAAf,GAAyC,IAAvD;AACD,CAVD;;AAYA,SAASN,gBAAgB,IAAIS,OAA7B","sourcesContent":["import { useRef, useEffect, useState } from 'react'\nimport { createPortal } from 'react-dom'\n\ntype Props = {\n  selector: any\n}\n\nconst ClientOnlyPortal: React.FC<Props> = ({ children, selector }) => {\n  const ref = useRef() as React.MutableRefObject<HTMLElement>\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    ref.current = document.querySelector(selector)\n    setMounted(true)\n  }, [selector])\n\n  return mounted ? createPortal(children, ref.current) : null\n}\n\nexport { ClientOnlyPortal as default }\n"]},"metadata":{},"sourceType":"module"}