{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/character/character-sheet/common/header/hit-points/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useMemo } from 'react';\nimport { useHitPointsMutation, useMaxHitPointsMutation } from '../../../../../../generated/graphql';\nimport { useModal } from '../../../../../../context/modal';\nimport styles from './styles.module.css';\n\nvar HitPoints = function HitPoints(_ref) {\n  _s();\n\n  var characterId = _ref.characterId,\n      hitPoints = _ref.hitPoints,\n      maxHitPoints = _ref.maxHitPoints;\n\n  var _useModal = useModal(),\n      openModal = _useModal.openModal;\n\n  var hitPointsPercent = Math.round(hitPoints / maxHitPoints * 100);\n  var getHitPointsColor = useMemo(function () {\n    if (hitPointsPercent < 25) {\n      return 'bg-red-800';\n    } else if (hitPointsPercent < 70) {\n      return 'bg-orange-500';\n    } else {\n      return 'bg-green-700';\n    }\n  }, [hitPointsPercent]);\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.hitPointsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.hitPointsLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"HP\"), __jsx(\"div\", {\n    className: styles.hitPointsBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"\".concat(styles.hitPointsBarInner, \" \").concat(getHitPointsColor),\n    style: {\n      width: \"\".concat(hitPointsPercent, \"%\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"flex items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: styles.hitPoints,\n    onClick: function onClick() {\n      return openModal({\n        type: 'number',\n        props: {\n          originalValue: hitPoints,\n          characterId: characterId,\n          title: 'Hit Points',\n          type: 'hitPoints',\n          mutation: useHitPointsMutation\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, hitPoints), __jsx(\"span\", {\n    className: \"mx-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"/\"), __jsx(\"button\", {\n    type: \"button\",\n    className: \"font-bold\",\n    onClick: function onClick() {\n      return openModal({\n        type: 'number',\n        props: {\n          originalValue: maxHitPoints,\n          characterId: characterId,\n          title: 'Max Hit Points',\n          type: 'maxHitPoints',\n          mutation: useMaxHitPointsMutation\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, maxHitPoints))));\n};\n\n_s(HitPoints, \"J7z/H2ZXEiBbNxTTRfVNXv8L9FA=\", false, function () {\n  return [useModal];\n});\n\n_c = HitPoints;\nexport { HitPoints as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"HitPoints\");","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/character/character-sheet/common/header/hit-points/index.tsx"],"names":["useMemo","useHitPointsMutation","useMaxHitPointsMutation","useModal","styles","HitPoints","characterId","hitPoints","maxHitPoints","openModal","hitPointsPercent","Math","round","getHitPointsColor","container","hitPointsContainer","hitPointsLabel","hitPointsBar","hitPointsBarInner","width","type","props","originalValue","title","mutation","default"],"mappings":"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","sourcesContent":["import { useMemo } from 'react'\nimport {\n  Character,\n  useHitPointsMutation,\n  useMaxHitPointsMutation,\n} from '../../../../../../generated/graphql'\nimport { useModal } from '../../../../../../context/modal'\n\nimport styles from './styles.module.css'\n\ntype Props = {\n  characterId: Character['id']\n  hitPoints: Character['hitPoints']\n  maxHitPoints: Character['maxHitPoints']\n}\n\nconst HitPoints: React.FC<Props> = ({\n  characterId,\n  hitPoints,\n  maxHitPoints,\n}) => {\n  const { openModal } = useModal()\n\n  const hitPointsPercent = Math.round((hitPoints / maxHitPoints) * 100)\n\n  const getHitPointsColor = useMemo(() => {\n    if (hitPointsPercent < 25) {\n      return 'bg-red-800'\n    } else if (hitPointsPercent < 70) {\n      return 'bg-orange-500'\n    } else {\n      return 'bg-green-700'\n    }\n  }, [hitPointsPercent])\n\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.hitPointsContainer}>\n        <div className={styles.hitPointsLabel}>HP</div>\n        <div className={styles.hitPointsBar}>\n          <div\n            className={`${styles.hitPointsBarInner} ${getHitPointsColor}`}\n            style={{\n              width: `${hitPointsPercent}%`,\n            }}\n          />\n        </div>\n        <div className=\"flex items-center\">\n          <button\n            type=\"button\"\n            className={styles.hitPoints}\n            onClick={() =>\n              openModal({\n                type: 'number',\n                props: {\n                  originalValue: hitPoints,\n                  characterId,\n                  title: 'Hit Points',\n                  type: 'hitPoints',\n                  mutation: useHitPointsMutation,\n                },\n              })\n            }\n          >\n            {hitPoints}\n          </button>\n          <span className=\"mx-1\">/</span>\n          <button\n            type=\"button\"\n            className=\"font-bold\"\n            onClick={() =>\n              openModal({\n                type: 'number',\n                props: {\n                  originalValue: maxHitPoints,\n                  characterId,\n                  title: 'Max Hit Points',\n                  type: 'maxHitPoints',\n                  mutation: useMaxHitPointsMutation,\n                },\n              })\n            }\n          >\n            {maxHitPoints}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HitPoints as default }\n"]},"metadata":{},"sourceType":"module"}