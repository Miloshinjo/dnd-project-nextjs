{"ast":null,"code":"var _jsxFileName = \"/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/character/character-sheet/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useCallback } from 'react';\nimport Loader from '../../layout/loader';\nimport Nav from './nav';\nimport { useCharacterQuery, useSkillsQuery } from '../../../generated/graphql';\nimport ScreenStats from './screen-stats';\nimport ScreenSkills from './screen-skills';\nimport ScreenSpells from './screen-spells';\nimport ScreenSettings from './screen-settings';\nimport CharacterHeader from './common/header';\nimport styles from './styles.module.css';\n\nconst CharacterSheet = ({\n  id\n}) => {\n  var _character$subclass;\n\n  const [characterResult] = useCharacterQuery({\n    variables: {\n      id\n    }\n  });\n  const [skillsResult] = useSkillsQuery();\n\n  const getActiveKey = () => {\n    if (!localStorage.getItem('activeCharacterScreen')) return 'stats';\n    const [characterId, activeKey] = localStorage.getItem('activeCharacterScreen').split(',');\n    if (!characterId || !activeKey) return 'stats';\n\n    if (id === characterId) {\n      return activeKey;\n    } else {\n      return 'stats';\n    }\n  };\n\n  const {\n    0: activeKey,\n    1: setActiveKey\n  } = useState(getActiveKey() || 'stats');\n  const setActiveKeyAndStore = useCallback(key => {\n    setActiveKey(key);\n    localStorage.setItem('activeCharacterScreen', `${id},${key}`);\n  }, [id]);\n  if (characterResult.error || skillsResult.error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }\n  }, 'An error occurred loading your character');\n\n  if (characterResult.fetching || skillsResult.fetching) {\n    return __jsx(\"div\", {\n      className: styles.fetchingContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const {\n    character\n  } = characterResult.data;\n  const {\n    skills\n  } = skillsResult.data;\n  const screens = {\n    stats: __jsx(ScreenStats, {\n      character: character,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }\n    }),\n    skills: __jsx(ScreenSkills, {\n      character: character,\n      skills: skills,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }),\n    spells: __jsx(ScreenSpells, {\n      character: character,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }),\n    settings: __jsx(ScreenSettings, {\n      character: character,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    })\n  };\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(CharacterHeader, {\n    character: character,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: styles.screensContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, screens[activeKey]), __jsx(Nav, {\n    activeKey: activeKey,\n    setActiveKeyAndStore: setActiveKeyAndStore,\n    isSpellcaster: !!((_character$subclass = character.subclass) === null || _character$subclass === void 0 ? void 0 : _character$subclass.spellCastingModifier) || !!character.klass.spellCastingModifier,\n    klass: character.klass.name.toLowerCase(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport { CharacterSheet as default };","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/character/character-sheet/index.tsx"],"names":["useState","useCallback","Loader","Nav","useCharacterQuery","useSkillsQuery","ScreenStats","ScreenSkills","ScreenSpells","ScreenSettings","CharacterHeader","styles","CharacterSheet","id","characterResult","variables","skillsResult","getActiveKey","localStorage","getItem","characterId","activeKey","split","setActiveKey","setActiveKeyAndStore","key","setItem","error","fetching","fetchingContainer","character","data","skills","screens","stats","spells","settings","container","screensContainer","subclass","spellCastingModifier","klass","name","toLowerCase","default"],"mappings":"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","sourcesContent":["import { useState, useCallback } from 'react'\n\nimport Loader from '../../layout/loader'\nimport Nav from './nav'\nimport { ActiveKey } from '../../../models/misc'\nimport {\n  Character,\n  useCharacterQuery,\n  useSkillsQuery,\n} from '../../../generated/graphql'\n\nimport ScreenStats from './screen-stats'\nimport ScreenSkills from './screen-skills'\nimport ScreenSpells from './screen-spells'\nimport ScreenSettings from './screen-settings'\nimport CharacterHeader from './common/header'\n\nimport styles from './styles.module.css'\n\ntype Props = {\n  id: Character['id']\n}\n\nconst CharacterSheet: React.FC<Props> = ({ id }) => {\n  const [characterResult] = useCharacterQuery({ variables: { id } })\n  const [skillsResult] = useSkillsQuery()\n\n  const getActiveKey = (): ActiveKey => {\n    if (!localStorage.getItem('activeCharacterScreen')) return 'stats'\n\n    const [characterId, activeKey] = localStorage\n      .getItem('activeCharacterScreen')\n      .split(',')\n\n    if (!characterId || !activeKey) return 'stats'\n\n    if (id === characterId) {\n      return activeKey as ActiveKey\n    } else {\n      return 'stats'\n    }\n  }\n\n  const [activeKey, setActiveKey] = useState<ActiveKey>(\n    (getActiveKey() as ActiveKey) || 'stats',\n  )\n\n  const setActiveKeyAndStore = useCallback(\n    (key: ActiveKey) => {\n      setActiveKey(key)\n      localStorage.setItem('activeCharacterScreen', `${id},${key}`)\n    },\n    [id],\n  )\n\n  if (characterResult.error || skillsResult.error)\n    return <div>{'An error occurred loading your character'}</div>\n\n  if (characterResult.fetching || skillsResult.fetching) {\n    return (\n      <div className={styles.fetchingContainer}>\n        <Loader />\n      </div>\n    )\n  }\n\n  const { character } = characterResult.data\n  const { skills } = skillsResult.data\n\n  const screens = {\n    stats: <ScreenStats character={character} />,\n    skills: <ScreenSkills character={character} skills={skills} />,\n    spells: <ScreenSpells character={character} />,\n    settings: <ScreenSettings character={character} />,\n  }\n\n  return (\n    <div className={styles.container}>\n      <CharacterHeader character={character} />\n      <div className={styles.screensContainer}>{screens[activeKey]}</div>\n      <Nav\n        activeKey={activeKey}\n        setActiveKeyAndStore={setActiveKeyAndStore}\n        isSpellcaster={\n          !!character.subclass?.spellCastingModifier ||\n          !!character.klass.spellCastingModifier\n        }\n        klass={character.klass.name.toLowerCase()}\n      />\n    </div>\n  )\n}\n\nexport { CharacterSheet as default }\n"]},"metadata":{},"sourceType":"module"}