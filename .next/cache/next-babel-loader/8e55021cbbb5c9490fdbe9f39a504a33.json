{"ast":null,"code":"import { queryField } from '@nexus/schema';\nimport errors from '../../../utils/errors';\nimport { handleError } from '../../../utils/helpers';\nexport const skills = queryField('skills', {\n  type: 'Skill',\n  list: true,\n  resolve: async (parent, args, {\n    prisma\n  }) => {\n    try {\n      const skills = await prisma.skill.findMany({\n        orderBy: {\n          name: 'asc'\n        }\n      });\n      return skills;\n    } catch (err) {\n      console.log(err);\n      return handleError(errors.serverError);\n    }\n  }\n});","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/server/types/resolvers/queries/skill.ts"],"names":["queryField","errors","handleError","skills","type","list","resolve","parent","args","prisma","skill","findMany","orderBy","name","err","console","log","serverError"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAMC,MAAM,GAAGH,UAAU,CAAC,QAAD,EAAW;AACzCI,EAAAA,IAAI,EAAE,OADmC;AAEzCC,EAAAA,IAAI,EAAE,IAFmC;AAGzCC,EAAAA,OAAO,EAAE,OAAOC,MAAP,EAAeC,IAAf,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAAoC;AAC3C,QAAI;AACF,YAAMN,MAAM,GAAG,MAAMM,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsB;AACzCC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE;AADC;AADgC,OAAtB,CAArB;AAMA,aAAOV,MAAP;AACD,KARD,CAQE,OAAOW,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAOZ,WAAW,CAACD,MAAM,CAACgB,WAAR,CAAlB;AACD;AACF;AAhBwC,CAAX,CAAzB","sourcesContent":["import { queryField } from '@nexus/schema'\n\nimport errors from '../../../utils/errors'\nimport { handleError } from '../../../utils/helpers'\n\nexport const skills = queryField('skills', {\n  type: 'Skill',\n  list: true,\n  resolve: async (parent, args, { prisma }) => {\n    try {\n      const skills = await prisma.skill.findMany({\n        orderBy: {\n          name: 'asc',\n        },\n      })\n\n      return skills\n    } catch (err) {\n      console.log(err)\n      return handleError(errors.serverError)\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}