{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/forms/login/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Router from 'next/router';\nimport { saveToken } from '../../../utils/token';\nimport SubmitButton from '../../form/submit-button';\nimport TextInput from '../../form/text-input';\nimport validations from './validations';\nimport styles from './styles.module.css';\nimport { useLoginMutation } from '../../../generated/graphql';\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var _useState = useState(''),\n      serverError = _useState[0],\n      setServerError = _useState[1];\n\n  var _useLoginMutation = useLoginMutation(),\n      _useLoginMutation2 = _slicedToArray(_useLoginMutation, 2),\n      loginResult = _useLoginMutation2[0],\n      login = _useLoginMutation2[1];\n\n  var _useForm = useForm({\n    mode: 'onBlur'\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(_ref) {\n    var email = _ref.email,\n        password = _ref.password;\n    setServerError('');\n    login({\n      email: email,\n      password: password\n    }).then(function (result) {\n      var _result$data, _result$data$login;\n\n      if (result.error) {\n        var _result$error;\n\n        setServerError((result === null || result === void 0 ? void 0 : (_result$error = result.error) === null || _result$error === void 0 ? void 0 : _result$error.message) || 'Unknown error occurred');\n        return;\n      }\n\n      saveToken(result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$login = _result$data.login) === null || _result$data$login === void 0 ? void 0 : _result$data$login.token);\n      Router.push('/app');\n    });\n  };\n\n  return __jsx(\"form\", {\n    className: styles.form,\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(TextInput, {\n    label: \"Email\",\n    errors: errors,\n    name: \"email\",\n    placeholder: \"lolth@underdark.io\",\n    register: register,\n    validations: validations.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), __jsx(TextInput, {\n    label: \"Password\",\n    errors: errors,\n    name: \"password\",\n    placeholder: \"spider1rules\",\n    register: register,\n    type: \"password\",\n    validations: validations.password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), __jsx(SubmitButton, {\n    text: \"Log in\",\n    loading: loginResult.fetching,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), serverError && __jsx(\"p\", {\n    className: styles.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }\n  }, serverError));\n};\n\n_s(LoginForm, \"9oY24umf8QVn537Q6So1fnimLpE=\", false, function () {\n  return [useLoginMutation, useForm];\n});\n\n_c = LoginForm;\nexport { LoginForm as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/forms/login/index.tsx"],"names":["useState","useForm","Router","saveToken","SubmitButton","TextInput","validations","styles","useLoginMutation","LoginForm","serverError","setServerError","loginResult","login","mode","register","handleSubmit","errors","onSubmit","email","password","then","result","error","message","data","token","push","form","fetching","errorText","default"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;;AAOA,IAAMC,SAAmB,GAAG,SAAtBA,SAAsB,GAAM;AAAA;;AAAA,kBACMT,QAAQ,CAAS,EAAT,CADd;AAAA,MACzBU,WADyB;AAAA,MACZC,cADY;;AAAA,0BAEHH,gBAAgB,EAFb;AAAA;AAAA,MAEzBI,WAFyB;AAAA,MAEZC,KAFY;;AAAA,iBAIWZ,OAAO,CAAa;AAC7Da,IAAAA,IAAI,EAAE;AADuD,GAAb,CAJlB;AAAA,MAIxBC,QAJwB,YAIxBA,QAJwB;AAAA,MAIdC,YAJc,YAIdA,YAJc;AAAA,MAIAC,MAJA,YAIAA,MAJA;;AAQhC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAqC;AAAA,QAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,QAA3BC,QAA2B,QAA3BA,QAA2B;AACpDT,IAAAA,cAAc,CAAC,EAAD,CAAd;AAEAE,IAAAA,KAAK,CAAC;AAAEM,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,QAAQ,EAARA;AAAT,KAAD,CAAL,CAA2BC,IAA3B,CAAgC,UAACC,MAAD,EAAY;AAAA;;AAC1C,UAAIA,MAAM,CAACC,KAAX,EAAkB;AAAA;;AAChBZ,QAAAA,cAAc,CAAC,CAAAW,MAAM,SAAN,IAAAA,MAAM,WAAN,6BAAAA,MAAM,CAAEC,KAAR,gEAAeC,OAAf,KAA0B,wBAA3B,CAAd;AACA;AACD;;AAEDrB,MAAAA,SAAS,CAACmB,MAAD,aAACA,MAAD,uCAACA,MAAM,CAAEG,IAAT,uEAAC,aAAcZ,KAAf,uDAAC,mBAAqBa,KAAtB,CAAT;AACAxB,MAAAA,MAAM,CAACyB,IAAP,CAAY,MAAZ;AACD,KARD;AASD,GAZD;;AAcA,SACE;AAAM,IAAA,SAAS,EAAEpB,MAAM,CAACqB,IAAxB;AAA8B,IAAA,QAAQ,EAAEZ,YAAY,CAACE,QAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,MAAM,EAAED,MAFV;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,WAAW,EAAC,oBAJd;AAKE,IAAA,QAAQ,EAAEF,QALZ;AAME,IAAA,WAAW,EAAET,WAAW,CAACa,KAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,MAAM,EAAEF,MAFV;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,WAAW,EAAC,cAJd;AAKE,IAAA,QAAQ,EAAEF,QALZ;AAME,IAAA,IAAI,EAAC,UANP;AAOE,IAAA,WAAW,EAAET,WAAW,CAACc,QAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAkBE,MAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAER,WAAW,CAACiB,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,EAmBGnB,WAAW,IAAI;AAAG,IAAA,SAAS,EAAEH,MAAM,CAACuB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCpB,WAAjC,CAnBlB,CADF;AAuBD,CA7CD;;GAAMD,S;UAEyBD,gB,EAEcP,O;;;KAJvCQ,S;AA+CN,SAASA,SAAS,IAAIsB,OAAtB","sourcesContent":["import { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport Router from 'next/router'\n\nimport { saveToken } from '../../../utils/token'\nimport SubmitButton from '../../form/submit-button'\nimport TextInput from '../../form/text-input'\n\nimport validations from './validations'\n\nimport styles from './styles.module.css'\nimport { useLoginMutation } from '../../../generated/graphql'\n\ntype FormValues = {\n  email: string\n  password: string\n}\n\nconst LoginForm: React.FC = () => {\n  const [serverError, setServerError] = useState<string>('')\n  const [loginResult, login] = useLoginMutation()\n\n  const { register, handleSubmit, errors } = useForm<FormValues>({\n    mode: 'onBlur',\n  })\n\n  const onSubmit = ({ email, password }: FormValues) => {\n    setServerError('')\n\n    login({ email, password }).then((result) => {\n      if (result.error) {\n        setServerError(result?.error?.message || 'Unknown error occurred')\n        return\n      }\n\n      saveToken(result?.data?.login?.token)\n      Router.push('/app')\n    })\n  }\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\n      <TextInput\n        label=\"Email\"\n        errors={errors}\n        name=\"email\"\n        placeholder=\"lolth@underdark.io\"\n        register={register}\n        validations={validations.email}\n      />\n      <TextInput\n        label=\"Password\"\n        errors={errors}\n        name=\"password\"\n        placeholder=\"spider1rules\"\n        register={register}\n        type=\"password\"\n        validations={validations.password}\n      />\n      <SubmitButton text=\"Log in\" loading={loginResult.fetching} />\n      {serverError && <p className={styles.errorText}>{serverError}</p>}\n    </form>\n  )\n}\n\nexport { LoginForm as default }\n"]},"metadata":{},"sourceType":"module"}