{"ast":null,"code":"var _jsxFileName = \"/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/spell/info/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { GiMusicSpell, GiHand, GiSwapBag } from 'react-icons/gi';\nimport styles from './styles.module.css';\n\nconst SpellInfo = ({\n  castingTime,\n  duration,\n  range,\n  components,\n  attackSave,\n  damageEffect\n}) => {\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.spellInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.spellInfoLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Casting time\"), __jsx(\"div\", {\n    className: styles.spellInfoValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, castingTime)), __jsx(\"div\", {\n    className: styles.spellInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.spellInfoLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Duration\"), __jsx(\"div\", {\n    className: styles.spellInfoValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, duration)), __jsx(\"div\", {\n    className: styles.spellInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.spellInfoLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Range\"), __jsx(\"div\", {\n    className: styles.spellInfoValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, range)), __jsx(\"div\", {\n    className: styles.spellInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.spellInfoLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Components\"), __jsx(\"div\", {\n    className: `${styles.spellInfoValue} ${styles.spellInfoValueComponents}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, components.split(',').map(component => component === 'v' ? __jsx(\"span\", {\n    className: styles.spellInfoComponentsIcon,\n    key: \"v\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, __jsx(GiMusicSpell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })) : component === 's' ? __jsx(\"span\", {\n    className: styles.spellInfoComponentsIcon,\n    key: \"s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, __jsx(GiHand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })) : __jsx(\"span\", {\n    className: styles.spellInfoComponentsIcon,\n    key: \"m\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, __jsx(GiSwapBag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }))))), __jsx(\"div\", {\n    className: styles.spellInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.spellInfoLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Attack/Save\"), __jsx(\"div\", {\n    className: styles.spellInfoValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, attackSave)), __jsx(\"div\", {\n    className: styles.spellInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.spellInfoLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Damage/Effect\"), __jsx(\"div\", {\n    className: styles.spellInfoValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, damageEffect)));\n};\n\nexport { SpellInfo as default };","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/spell/info/index.tsx"],"names":["GiMusicSpell","GiHand","GiSwapBag","styles","SpellInfo","castingTime","duration","range","components","attackSave","damageEffect","container","spellInfo","spellInfoLabel","spellInfoValue","spellInfoValueComponents","split","map","component","spellInfoComponentsIcon","default"],"mappings":"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","sourcesContent":["import { Spell } from '../../../generated/graphql'\nimport { GiMusicSpell, GiHand, GiSwapBag } from 'react-icons/gi'\n\nimport styles from './styles.module.css'\n\ntype Props = {\n  castingTime: Spell['castingTime']\n  duration: Spell['duration']\n  range: Spell['range']\n  components: Spell['components']\n  attackSave: Spell['attackSave']\n  damageEffect: Spell['damageEffect']\n}\n\nconst SpellInfo: React.FC<Props> = ({\n  castingTime,\n  duration,\n  range,\n  components,\n  attackSave,\n  damageEffect,\n}) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.spellInfo}>\n        <div className={styles.spellInfoLabel}>Casting time</div>\n        <div className={styles.spellInfoValue}>{castingTime}</div>\n      </div>\n      <div className={styles.spellInfo}>\n        <div className={styles.spellInfoLabel}>Duration</div>\n        <div className={styles.spellInfoValue}>{duration}</div>\n      </div>\n      <div className={styles.spellInfo}>\n        <div className={styles.spellInfoLabel}>Range</div>\n        <div className={styles.spellInfoValue}>{range}</div>\n      </div>\n      <div className={styles.spellInfo}>\n        <div className={styles.spellInfoLabel}>Components</div>\n        <div\n          className={`${styles.spellInfoValue} ${styles.spellInfoValueComponents}`}\n        >\n          {components.split(',').map((component) =>\n            component === 'v' ? (\n              <span className={styles.spellInfoComponentsIcon} key=\"v\">\n                <GiMusicSpell />\n              </span>\n            ) : component === 's' ? (\n              <span className={styles.spellInfoComponentsIcon} key=\"s\">\n                <GiHand />\n              </span>\n            ) : (\n              <span className={styles.spellInfoComponentsIcon} key=\"m\">\n                <GiSwapBag />\n              </span>\n            ),\n          )}\n        </div>\n      </div>\n      <div className={styles.spellInfo}>\n        <div className={styles.spellInfoLabel}>Attack/Save</div>\n        <div className={styles.spellInfoValue}>{attackSave}</div>\n      </div>\n      <div className={styles.spellInfo}>\n        <div className={styles.spellInfoLabel}>Damage/Effect</div>\n        <div className={styles.spellInfoValue}>{damageEffect}</div>\n      </div>\n    </div>\n  )\n}\n\nexport { SpellInfo as default }\n"]},"metadata":{},"sourceType":"module"}