{"ast":null,"code":"var _jsxFileName = \"/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/modals/update-number-value/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { IoIosClose } from 'react-icons/io';\nimport { useForm } from 'react-hook-form';\nimport { useModal } from '../../../context/modal';\nimport NumberInput from '../../form/number-input';\nimport NumberInputControls from '../../form/number-input-controls';\nimport SubmitButton from '../../form/submit-button';\nimport icons from './icons';\nimport validations from './validations';\nimport styles from './styles.module.css';\n\nconst UpdateNumberValue = ({\n  characterId,\n  originalValue,\n  title,\n  type,\n  mutation\n}) => {\n  const {\n    closeModal\n  } = useModal();\n  const [, setResult] = mutation();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    watch\n  } = useForm({\n    mode: 'onSubmit',\n    defaultValues: {\n      [type]: originalValue\n    }\n  });\n\n  const onSubmit = async values => {\n    closeModal();\n    const result = await setResult({\n      id: characterId,\n      [type]: Number(values[type])\n    });\n\n    if (result.error) {\n      console.log('An error occured. Handle it later.');\n      return;\n    }\n  };\n\n  const currentValue = Number(watch(type));\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, icons[type], __jsx(\"h1\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, title)), __jsx(\"button\", {\n    className: styles.close,\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(IoIosClose, {\n    size: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    className: styles.form,\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(NumberInput, {\n    errors: errors,\n    name: type,\n    placeholder: \"0\",\n    register: register,\n    validations: validations[type],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), __jsx(NumberInputControls, {\n    currentValue: currentValue,\n    defaultValue: originalValue,\n    setValue: setValue,\n    valueType: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: styles.submitContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(SubmitButton, {\n    text: \"Set\",\n    loading: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport { UpdateNumberValue as default };","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/modals/update-number-value/index.tsx"],"names":["React","IoIosClose","useForm","useModal","NumberInput","NumberInputControls","SubmitButton","icons","validations","styles","UpdateNumberValue","characterId","originalValue","title","type","mutation","closeModal","setResult","register","handleSubmit","errors","setValue","watch","mode","defaultValues","onSubmit","values","result","id","Number","error","console","log","currentValue","container","header","headerTitle","heading","close","formContainer","form","inputContainer","submitContainer","default"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IoIosClose } from 'react-icons/io'\nimport { useForm } from 'react-hook-form'\n\nimport { useModal } from '../../../context/modal'\nimport NumberInput from '../../form/number-input'\nimport NumberInputControls from '../../form/number-input-controls'\nimport SubmitButton from '../../form/submit-button'\nimport { Character } from '../../../generated/graphql'\n\nimport icons from './icons'\nimport validations from './validations'\nimport styles from './styles.module.css'\n\ntype FormValues = Record<string, number>\n\ntype Props = {\n  characterId: Character['id']\n  originalValue: number\n  title: string\n  type: string\n  mutation: Function\n}\n\nconst UpdateNumberValue: React.FC<Props> = ({\n  characterId,\n  originalValue,\n  title,\n  type,\n  mutation,\n}) => {\n  const { closeModal } = useModal()\n\n  const [, setResult] = mutation()\n\n  const { register, handleSubmit, errors, setValue, watch } = useForm<\n    FormValues\n  >({\n    mode: 'onSubmit',\n    defaultValues: {\n      [type]: originalValue,\n    },\n  })\n\n  const onSubmit = async (values: FormValues) => {\n    closeModal()\n\n    const result = await setResult({\n      id: characterId,\n      [type]: Number(values[type]),\n    })\n\n    if (result.error) {\n      console.log('An error occured. Handle it later.')\n      return\n    }\n  }\n\n  const currentValue = Number(watch(type))\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <div className={styles.headerTitle}>\n          {icons[type]}\n          <h1 className={styles.heading}>{title}</h1>\n        </div>\n        <button className={styles.close} onClick={closeModal}>\n          <IoIosClose size={25} />\n        </button>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\n          <div className={styles.inputContainer}>\n            <NumberInput\n              errors={errors}\n              name={type}\n              placeholder=\"0\"\n              register={register}\n              validations={validations[type]}\n            />\n            <NumberInputControls\n              currentValue={currentValue}\n              defaultValue={originalValue}\n              setValue={setValue}\n              valueType={type}\n            />\n          </div>\n\n          <div className={styles.submitContainer}>\n            <SubmitButton text=\"Set\" loading={false} />\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport { UpdateNumberValue as default }\n"]},"metadata":{},"sourceType":"module"}