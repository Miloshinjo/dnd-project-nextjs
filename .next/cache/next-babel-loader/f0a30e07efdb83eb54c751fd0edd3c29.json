{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/modals/spell-modal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSpellQuery } from '../../../generated/graphql';\nimport Loader from '../../layout/loader';\nimport { useModal } from '../../../context/modal';\nimport SpellDescription from '../../../components/spell/description';\nimport SpellInfo from '../../../components/spell/info';\nimport SpellConcentrationRitual from '../../../components/spell/concentration-ritual';\nimport SpellMaterial from '../../../components/spell/material';\nimport SpellKlasses from '../../../components/spell/klasses';\nimport styles from './styles.module.css';\n\nvar SpellModal = function SpellModal(_ref) {\n  _s();\n\n  var spellId = _ref.spellId,\n      spellName = _ref.spellName;\n\n  var _useModal = useModal(),\n      closeModal = _useModal.closeModal;\n\n  var _useSpellQuery = useSpellQuery({\n    variables: {\n      id: spellId\n    }\n  }),\n      _useSpellQuery2 = _slicedToArray(_useSpellQuery, 1),\n      result = _useSpellQuery2[0];\n\n  if (result.fetching) {\n    return __jsx(\"div\", {\n      className: \"m-8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, __jsx(Loader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (result.error) {\n    var _result$error;\n\n    console.log(result.error);\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    }, (result === null || result === void 0 ? void 0 : (_result$error = result.error) === null || _result$error === void 0 ? void 0 : _result$error.message) || 'Unknown error occurred');\n  }\n\n  var spell = result.data.spell;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"flex flex-col p-4 items-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: styles.spellName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, spell.name), __jsx(\"h3\", {\n    className: styles.spellSchool,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, spell.school), __jsx(SpellConcentrationRitual, {\n    concentration: spell.concentration,\n    ritual: spell.ritual,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), __jsx(SpellInfo, {\n    attackSave: spell.attackSave,\n    castingTime: spell.castingTime,\n    components: spell.components,\n    damageEffect: spell.damageEffect,\n    duration: spell.duration,\n    range: spell.range,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), __jsx(SpellDescription, {\n    description: spell.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), __jsx(SpellMaterial, {\n    material: spell.material,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), __jsx(SpellKlasses, {\n    klasses: spell.klasses,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(SpellModal, \"iYeTNhDmeXPA4k3t9o7SjPbm6Fs=\", false, function () {\n  return [useModal, useSpellQuery];\n});\n\n_c = SpellModal;\nexport { SpellModal as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"SpellModal\");","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/modals/spell-modal/index.tsx"],"names":["useSpellQuery","Loader","useModal","SpellDescription","SpellInfo","SpellConcentrationRitual","SpellMaterial","SpellKlasses","styles","SpellModal","spellId","spellName","closeModal","variables","id","result","fetching","error","console","log","message","spell","data","container","header","name","spellSchool","school","concentration","ritual","attackSave","castingTime","components","damageEffect","duration","range","description","material","klasses","default"],"mappings":"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","sourcesContent":["import { Spell, useSpellQuery } from '../../../generated/graphql'\n\nimport Loader from '../../layout/loader'\nimport { useModal } from '../../../context/modal'\nimport SpellDescription from '../../../components/spell/description'\nimport SpellInfo from '../../../components/spell/info'\nimport SpellConcentrationRitual from '../../../components/spell/concentration-ritual'\nimport SpellMaterial from '../../../components/spell/material'\nimport SpellKlasses from '../../../components/spell/klasses'\n\nimport styles from './styles.module.css'\n\ntype Props = {\n  spellId: Spell['id']\n  spellName: Spell['name']\n}\n\nconst SpellModal: React.FC<Props> = ({ spellId, spellName }) => {\n  const { closeModal } = useModal()\n\n  const [result] = useSpellQuery({\n    variables: { id: spellId },\n  })\n\n  if (result.fetching) {\n    return (\n      <div className=\"m-8\">\n        <Loader />\n      </div>\n    )\n  }\n\n  if (result.error) {\n    console.log(result.error)\n    return <div>{result?.error?.message || 'Unknown error occurred'}</div>\n  }\n\n  const { spell } = result.data\n  return (\n    <>\n      <div className={styles.container}>\n        <div className={styles.header} />\n\n        <div className=\"flex flex-col p-4 items-start\">\n          <h2 className={styles.spellName}>{spell.name}</h2>\n          <h3 className={styles.spellSchool}>{spell.school}</h3>\n          <SpellConcentrationRitual\n            concentration={spell.concentration}\n            ritual={spell.ritual}\n          />\n          <SpellInfo\n            attackSave={spell.attackSave}\n            castingTime={spell.castingTime}\n            components={spell.components}\n            damageEffect={spell.damageEffect}\n            duration={spell.duration}\n            range={spell.range}\n          />\n          <SpellDescription description={spell.description} />\n          <SpellMaterial material={spell.material} />\n          <SpellKlasses klasses={spell.klasses} />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport { SpellModal as default }\n"]},"metadata":{},"sourceType":"module"}