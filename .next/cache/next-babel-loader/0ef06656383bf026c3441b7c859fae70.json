{"ast":null,"code":"var _jsxFileName = \"/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/modals/learn-spell/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { motion } from 'framer-motion';\nimport { IoIosClose } from 'react-icons/io';\nimport { useCharactersQuery, useLearnSpellMutation } from '../../../generated/graphql';\nimport Loader from '../../layout/loader';\nimport { GiSpellBook } from 'react-icons/gi';\nimport { useModal } from '../../../context/modal';\nimport styles from './styles.module.css';\nconst listVariants = {\n  hidden: {\n    opacity: 0\n  },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.2\n    }\n  }\n};\nconst itemVariants = {\n  hidden: {\n    opacity: 0,\n    y: 40\n  },\n  show: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.4\n    }\n  }\n};\n\nconst LearnSpell = ({\n  spellId\n}) => {\n  const {\n    closeModal\n  } = useModal();\n  const [charactersResult] = useCharactersQuery();\n  const [learnSpellResult, learnSpell] = useLearnSpellMutation();\n\n  if (charactersResult.fetching) {\n    return __jsx(\"div\", {\n      className: \"m-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (charactersResult.error) {\n    var _charactersResult$err;\n\n    console.log(charactersResult.error);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, (charactersResult === null || charactersResult === void 0 ? void 0 : (_charactersResult$err = charactersResult.error) === null || _charactersResult$err === void 0 ? void 0 : _charactersResult$err.message) || 'Unknown error occurred');\n  }\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(GiSpellBook, {\n    size: 20,\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), __jsx(\"h1\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Pick character\")), __jsx(\"button\", {\n    className: styles.close,\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(IoIosClose, {\n    size: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))), learnSpellResult.fetching ? __jsx(\"div\", {\n    className: \"p-4 flex items-center justify-center flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Learning new spell...\"), __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })) : learnSpellResult.data ? __jsx(\"div\", {\n    className: styles.spellLearnt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(\"h4\", {\n    className: styles.spellLearntHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, learnSpellResult.data.learnSpell.name), ' ', \"has learned a new spell!\"), __jsx(Link, {\n    href: `/app/${learnSpellResult.data.learnSpell.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: styles.spellLearntLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Back to character\")), __jsx(Link, {\n    href: `/spells`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: styles.spellLearntLinkFlat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Back to spells\"))) : __jsx(motion.div, {\n    variants: listVariants,\n    animate: \"show\",\n    initial: \"hidden\",\n    className: styles.listContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, charactersResult.data.characters.map(character => {\n    var _character$subclass, _character$subclass2, _character$subclass3;\n\n    if (!((_character$subclass = character.subclass) === null || _character$subclass === void 0 ? void 0 : _character$subclass.spellCastingModifier) && !character.klass.spellCastingModifier) {\n      return null;\n    }\n\n    if (character.spells.map(spell => spell.id).includes(spellId)) {\n      return null;\n    }\n\n    return __jsx(motion.button, {\n      className: styles.characterCard,\n      variants: itemVariants,\n      key: character.id,\n      type: \"button\",\n      onClick: async () => {\n        const result = await learnSpell({\n          id: character.id,\n          spellId\n        });\n\n        if (result.error) {\n          console.log('An error occured');\n          return;\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"w-8 h-8 rounded-full flex p-1 mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      src: `/images/classes/${character.klass.name.toLowerCase()}.png`,\n      alt: \"class name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    })), __jsx(\"div\", {\n      className: \"flex flex-col items-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, character.name), __jsx(\"div\", {\n      className: \"text-xs text-gray-500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, ((_character$subclass2 = character.subclass) === null || _character$subclass2 === void 0 ? void 0 : _character$subclass2.name) ? (_character$subclass3 = character.subclass) === null || _character$subclass3 === void 0 ? void 0 : _character$subclass3.name : character.klass.name)));\n  })));\n};\n\nexport { LearnSpell as default };","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/modals/learn-spell/index.tsx"],"names":["React","Link","motion","IoIosClose","useCharactersQuery","useLearnSpellMutation","Loader","GiSpellBook","useModal","styles","listVariants","hidden","opacity","show","transition","staggerChildren","itemVariants","y","duration","LearnSpell","spellId","closeModal","charactersResult","learnSpellResult","learnSpell","fetching","error","console","log","message","container","header","headerTitle","heading","close","data","spellLearnt","spellLearntHeading","name","id","spellLearntLink","spellLearntLinkFlat","listContainer","characters","map","character","subclass","spellCastingModifier","klass","spells","spell","includes","characterCard","result","toLowerCase","default"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport { motion } from 'framer-motion'\nimport { IoIosClose } from 'react-icons/io'\n\nimport {\n  Spell,\n  Character,\n  useCharactersQuery,\n  useLearnSpellMutation,\n} from '../../../generated/graphql'\nimport Loader from '../../layout/loader'\n\nimport { GiSpellBook } from 'react-icons/gi'\n\nimport { useModal } from '../../../context/modal'\n\nimport styles from './styles.module.css'\n\nconst listVariants = {\n  hidden: { opacity: 0 },\n  show: { opacity: 1, transition: { staggerChildren: 0.2 } },\n}\n\nconst itemVariants = {\n  hidden: {\n    opacity: 0,\n    y: 40,\n  },\n  show: { opacity: 1, y: 0, transition: { duration: 0.4 } },\n}\n\ntype Props = {\n  spellId: Spell['id']\n}\n\nconst LearnSpell: React.FC<Props> = ({ spellId }) => {\n  const { closeModal } = useModal()\n\n  const [charactersResult] = useCharactersQuery()\n  const [learnSpellResult, learnSpell] = useLearnSpellMutation()\n\n  if (charactersResult.fetching) {\n    return (\n      <div className=\"m-8\">\n        <Loader />\n      </div>\n    )\n  }\n\n  if (charactersResult.error) {\n    console.log(charactersResult.error)\n    return (\n      <div>{charactersResult?.error?.message || 'Unknown error occurred'}</div>\n    )\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <div className={styles.headerTitle}>\n          <GiSpellBook size={20} color=\"#fff\" />\n          <h1 className={styles.heading}>Pick character</h1>\n        </div>\n        <button className={styles.close} onClick={closeModal}>\n          <IoIosClose size={25} />\n        </button>\n      </div>\n\n      {learnSpellResult.fetching ? (\n        <div className=\"p-4 flex items-center justify-center flex-col\">\n          <span className=\"mb-2\">Learning new spell...</span>\n          <Loader />\n        </div>\n      ) : learnSpellResult.data ? (\n        <div className={styles.spellLearnt}>\n          <h4 className={styles.spellLearntHeading}>\n            <span className=\"font-semibold\">\n              {learnSpellResult.data.learnSpell.name}\n            </span>{' '}\n            has learned a new spell!\n          </h4>\n          <Link href={`/app/${learnSpellResult.data.learnSpell.id}`}>\n            <a className={styles.spellLearntLink}>Back to character</a>\n          </Link>\n          <Link href={`/spells`}>\n            <a className={styles.spellLearntLinkFlat}>Back to spells</a>\n          </Link>\n        </div>\n      ) : (\n        <motion.div\n          variants={listVariants}\n          animate=\"show\"\n          initial=\"hidden\"\n          className={styles.listContainer}\n        >\n          {charactersResult.data.characters.map((character: Character) => {\n            if (\n              !character.subclass?.spellCastingModifier &&\n              !character.klass.spellCastingModifier\n            ) {\n              return null\n            }\n\n            if (character.spells.map((spell) => spell.id).includes(spellId)) {\n              return null\n            }\n\n            return (\n              <motion.button\n                className={styles.characterCard}\n                variants={itemVariants}\n                key={character.id}\n                type=\"button\"\n                onClick={async () => {\n                  const result = await learnSpell({ id: character.id, spellId })\n\n                  if (result.error) {\n                    console.log('An error occured')\n                    return\n                  }\n                }}\n              >\n                <div className=\"w-8 h-8 rounded-full flex p-1 mr-2\">\n                  <img\n                    src={`/images/classes/${character.klass.name.toLowerCase()}.png`}\n                    alt=\"class name\"\n                  />\n                </div>\n                <div className=\"flex flex-col items-start\">\n                  <div className=\"font-bold\">{character.name}</div>\n                  <div className=\"text-xs text-gray-500\">\n                    {character.subclass?.name\n                      ? character.subclass?.name\n                      : character.klass.name}\n                  </div>\n                </div>\n              </motion.button>\n            )\n          })}\n        </motion.div>\n      )}\n    </div>\n  )\n}\n\nexport { LearnSpell as default }\n"]},"metadata":{},"sourceType":"module"}