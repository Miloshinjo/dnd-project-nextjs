{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/form/text-input/index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from './styles.module.css';\n\nvar TextInput = function TextInput(_ref) {\n  var _ref$defaultValue = _ref.defaultValue,\n      defaultValue = _ref$defaultValue === void 0 ? '' : _ref$defaultValue,\n      errors = _ref.errors,\n      label = _ref.label,\n      name = _ref.name,\n      register = _ref.register,\n      placeholder = _ref.placeholder,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'text' : _ref$type,\n      _ref$validations = _ref.validations,\n      validations = _ref$validations === void 0 ? {} : _ref$validations;\n  return __jsx(React.Fragment, null, __jsx(\"label\", {\n    className: styles.label,\n    htmlFor: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, label), __jsx(\"input\", {\n    \"aria-invalid\": errors.name ? 'true' : 'false',\n    id: name,\n    className: \"\".concat(styles.input, \" \").concat(errors[name] && 'border-orange-600'),\n    name: name,\n    defaultValue: defaultValue,\n    placeholder: placeholder,\n    ref: register(validations),\n    type: type,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), errors[name] && __jsx(\"span\", {\n    role: \"alert\",\n    className: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, errors[name].message));\n};\n\n_c = TextInput;\nexport { TextInput as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/form/text-input/index.tsx"],"names":["styles","TextInput","defaultValue","errors","label","name","register","placeholder","type","validations","input","error","message","default"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;;AAaA,IAAMC,SAA0B,GAAG,SAA7BA,SAA6B,OAS7B;AAAA,+BARJC,YAQI;AAAA,MARJA,YAQI,kCARW,EAQX;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,uBAFJC,IAEI;AAAA,MAFJA,IAEI,0BAFG,MAEH;AAAA,8BADJC,WACI;AAAA,MADJA,WACI,iCADU,EACV;AACJ,SACE,4BACE;AAAO,IAAA,SAAS,EAAET,MAAM,CAACI,KAAzB;AAAgC,IAAA,OAAO,EAAEC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,CADF,EAIE;AACE,oBAAcD,MAAM,CAACE,IAAP,GAAc,MAAd,GAAuB,OADvC;AAEE,IAAA,EAAE,EAAEA,IAFN;AAGE,IAAA,SAAS,YAAKL,MAAM,CAACU,KAAZ,cAAqBP,MAAM,CAACE,IAAD,CAAN,IAAgB,mBAArC,CAHX;AAIE,IAAA,IAAI,EAAEA,IAJR;AAKE,IAAA,YAAY,EAAEH,YALhB;AAME,IAAA,WAAW,EAAEK,WANf;AAOE,IAAA,GAAG,EAAED,QAAQ,CAACG,WAAD,CAPf;AAQE,IAAA,IAAI,EAAED,IARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAcGL,MAAM,CAACE,IAAD,CAAN,IACC;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAEL,MAAM,CAACW,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,MAAM,CAACE,IAAD,CAAN,CAAaO,OADhB,CAfJ,CADF;AAsBD,CAhCD;;KAAMX,S;AAkCN,SAASA,SAAS,IAAIY,OAAtB","sourcesContent":["import styles from './styles.module.css'\n\ntype Props = {\n  defaultValue?: string\n  errors: Record<any, any>\n  label: string\n  name: string\n  placeholder: string\n  register: any\n  type?: 'text' | 'email' | 'password'\n  validations?: Record<any, any>\n}\n\nconst TextInput: React.FC<Props> = ({\n  defaultValue = '',\n  errors,\n  label,\n  name,\n  register,\n  placeholder,\n  type = 'text',\n  validations = {},\n}) => {\n  return (\n    <>\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <input\n        aria-invalid={errors.name ? 'true' : 'false'}\n        id={name}\n        className={`${styles.input} ${errors[name] && 'border-orange-600'}`}\n        name={name}\n        defaultValue={defaultValue}\n        placeholder={placeholder}\n        ref={register(validations)}\n        type={type}\n      />\n      {errors[name] && (\n        <span role=\"alert\" className={styles.error}>\n          {errors[name].message}\n        </span>\n      )}\n    </>\n  )\n}\n\nexport { TextInput as default }\n"]},"metadata":{},"sourceType":"module"}