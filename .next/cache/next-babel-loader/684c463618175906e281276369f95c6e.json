{"ast":null,"code":"import { queryField, idArg } from '@nexus/schema';\nimport errors from '../../../utils/errors';\nimport { handleError } from '../../../utils/helpers';\nexport const characters = queryField('characters', {\n  type: 'Character',\n  list: true,\n  resolve: async (parent, args, {\n    prisma,\n    userId\n  }) => {\n    try {\n      const character = await prisma.character.findMany({\n        where: {\n          userId\n        }\n      });\n      return character;\n    } catch (err) {\n      console.log(err);\n      return handleError(errors.serverError);\n    }\n  }\n});\nexport const character = queryField('character', {\n  type: 'Character',\n  args: {\n    id: idArg()\n  },\n  resolve: async (parent, {\n    id\n  }, {\n    prisma\n  }) => {\n    return prisma.character.findOne({\n      where: {\n        id\n      }\n    });\n  }\n});","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/server/types/resolvers/queries/character.ts"],"names":["queryField","idArg","errors","handleError","characters","type","list","resolve","parent","args","prisma","userId","character","findMany","where","err","console","log","serverError","id","findOne"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,KAArB,QAAkC,eAAlC;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAMC,UAAU,GAAGJ,UAAU,CAAC,YAAD,EAAe;AACjDK,EAAAA,IAAI,EAAE,WAD2C;AAEjDC,EAAAA,IAAI,EAAE,IAF2C;AAGjDC,EAAAA,OAAO,EAAE,OAAOC,MAAP,EAAeC,IAAf,EAAqB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAArB,KAA4C;AACnD,QAAI;AACF,YAAMC,SAAS,GAAG,MAAMF,MAAM,CAACE,SAAP,CAAiBC,QAAjB,CAA0B;AAChDC,QAAAA,KAAK,EAAE;AAAEH,UAAAA;AAAF;AADyC,OAA1B,CAAxB;AAIA,aAAOC,SAAP;AACD,KAND,CAME,OAAOG,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAOZ,WAAW,CAACD,MAAM,CAACgB,WAAR,CAAlB;AACD;AACF;AAdgD,CAAf,CAA7B;AAiBP,OAAO,MAAMN,SAAS,GAAGZ,UAAU,CAAC,WAAD,EAAc;AAC/CK,EAAAA,IAAI,EAAE,WADyC;AAE/CI,EAAAA,IAAI,EAAE;AACJU,IAAAA,EAAE,EAAElB,KAAK;AADL,GAFyC;AAK/CM,EAAAA,OAAO,EAAE,OAAOC,MAAP,EAAe;AAAEW,IAAAA;AAAF,GAAf,EAAuB;AAAET,IAAAA;AAAF,GAAvB,KAAsC;AAC7C,WAAOA,MAAM,CAACE,SAAP,CAAiBQ,OAAjB,CAAyB;AAC9BN,MAAAA,KAAK,EAAE;AAAEK,QAAAA;AAAF;AADuB,KAAzB,CAAP;AAGD;AAT8C,CAAd,CAA5B","sourcesContent":["import { queryField, idArg } from '@nexus/schema'\n\nimport errors from '../../../utils/errors'\nimport { handleError } from '../../../utils/helpers'\n\nexport const characters = queryField('characters', {\n  type: 'Character',\n  list: true,\n  resolve: async (parent, args, { prisma, userId }) => {\n    try {\n      const character = await prisma.character.findMany({\n        where: { userId },\n      })\n\n      return character\n    } catch (err) {\n      console.log(err)\n      return handleError(errors.serverError)\n    }\n  },\n})\n\nexport const character = queryField('character', {\n  type: 'Character',\n  args: {\n    id: idArg(),\n  },\n  resolve: async (parent, { id }, { prisma }) => {\n    return prisma.character.findOne({\n      where: { id },\n    })\n  },\n})\n"]},"metadata":{},"sourceType":"module"}