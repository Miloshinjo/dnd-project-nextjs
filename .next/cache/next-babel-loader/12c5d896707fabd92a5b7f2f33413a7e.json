{"ast":null,"code":"import { queryField } from '@nexus/schema';\nimport errors from '../../../utils/errors';\nimport { handleError } from '../../../utils/helpers';\nexport const me = queryField('me', {\n  type: 'User',\n  resolve: async (_parent, _args, {\n    prisma,\n    userId\n  }) => {\n    try {\n      const user = await prisma.user.findOne({\n        where: {\n          id: userId\n        }\n      });\n      return user;\n    } catch (err) {\n      console.log(err);\n      return handleError(errors.serverError);\n    }\n  }\n});","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/server/types/resolvers/queries/user.ts"],"names":["queryField","errors","handleError","me","type","resolve","_parent","_args","prisma","userId","user","findOne","where","id","err","console","log","serverError"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAMC,EAAE,GAAGH,UAAU,CAAC,IAAD,EAAO;AACjCI,EAAAA,IAAI,EAAE,MAD2B;AAEjCC,EAAAA,OAAO,EAAE,OAAOC,OAAP,EAAgBC,KAAhB,EAAuB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAvB,KAA8C;AACrD,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMF,MAAM,CAACE,IAAP,CAAYC,OAAZ,CAAoB;AACrCC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAEJ;AAAN;AAD8B,OAApB,CAAnB;AAGA,aAAOC,IAAP;AACD,KALD,CAKE,OAAOI,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAOZ,WAAW,CAACD,MAAM,CAACgB,WAAR,CAAlB;AACD;AACF;AAZgC,CAAP,CAArB","sourcesContent":["import { queryField } from '@nexus/schema'\n\nimport errors from '../../../utils/errors'\nimport { handleError } from '../../../utils/helpers'\n\nexport const me = queryField('me', {\n  type: 'User',\n  resolve: async (_parent, _args, { prisma, userId }) => {\n    try {\n      const user = await prisma.user.findOne({\n        where: { id: userId },\n      })\n      return user\n    } catch (err) {\n      console.log(err)\n      return handleError(errors.serverError)\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}