{"ast":null,"code":"import jwt from 'jsonwebtoken';\nimport { JWT_SECRET, tokens } from './constants';\n\nconst handleError = error => {\n  // add any other logging mechanism here e.g. Sentry\n  return error;\n};\n\nconst generateAccessToken = userId => {\n  return jwt.sign({\n    userId,\n    type: tokens.access.name,\n    timestamp: Date.now()\n  }, JWT_SECRET, {\n    expiresIn: tokens.access.expiry\n  });\n};\n\nexport { handleError, generateAccessToken };","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/server/utils/helpers.ts"],"names":["jwt","JWT_SECRET","tokens","handleError","error","generateAccessToken","userId","sign","type","access","name","timestamp","Date","now","expiresIn","expiry"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AAIA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,aAAnC;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAA6B;AAC/C;AAEA,SAAOA,KAAP;AACD,CAJD;;AAMA,MAAMC,mBAAmB,GAAIC,MAAD,IAA4B;AACtD,SAAON,GAAG,CAACO,IAAJ,CACL;AAAED,IAAAA,MAAF;AAAUE,IAAAA,IAAI,EAAEN,MAAM,CAACO,MAAP,CAAcC,IAA9B;AAAoCC,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAA/C,GADK,EAELZ,UAFK,EAGL;AACEa,IAAAA,SAAS,EAAEZ,MAAM,CAACO,MAAP,CAAcM;AAD3B,GAHK,CAAP;AAOD,CARD;;AAUA,SAASZ,WAAT,EAAsBE,mBAAtB","sourcesContent":["import jwt from 'jsonwebtoken'\n\nimport { ApolloError } from 'apollo-server-express'\n\nimport { JWT_SECRET, tokens } from './constants'\n\nconst handleError = (error: ApolloError): any => {\n  // add any other logging mechanism here e.g. Sentry\n\n  return error\n}\n\nconst generateAccessToken = (userId: number): string => {\n  return jwt.sign(\n    { userId, type: tokens.access.name, timestamp: Date.now() },\n    JWT_SECRET as string,\n    {\n      expiresIn: tokens.access.expiry,\n    }\n  )\n}\n\nexport { handleError, generateAccessToken }\n"]},"metadata":{},"sourceType":"module"}