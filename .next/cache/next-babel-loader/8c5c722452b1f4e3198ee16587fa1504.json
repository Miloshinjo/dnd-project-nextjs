{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/modals/update-number-value/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { IoIosClose } from 'react-icons/io';\nimport { useForm } from 'react-hook-form';\nimport { useModal } from '../../../context/modal';\nimport NumberInput from '../../form/number-input';\nimport NumberInputControls from '../../form/number-input-controls';\nimport SubmitButton from '../../form/submit-button';\nimport icons from './icons';\nimport validations from './validations';\nimport styles from './styles.module.css';\n\nvar UpdateNumberValue = function UpdateNumberValue(_ref) {\n  _s();\n\n  var characterId = _ref.characterId,\n      originalValue = _ref.originalValue,\n      title = _ref.title,\n      type = _ref.type,\n      mutation = _ref.mutation;\n\n  var _useModal = useModal(),\n      closeModal = _useModal.closeModal;\n\n  var _mutation = mutation(),\n      _mutation2 = _slicedToArray(_mutation, 2),\n      setResult = _mutation2[1];\n\n  var _useForm = useForm({\n    mode: 'onSubmit',\n    defaultValues: _defineProperty({}, type, originalValue)\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue,\n      watch = _useForm.watch;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              closeModal();\n              _context.next = 3;\n              return setResult(_defineProperty({\n                id: characterId\n              }, type, Number(values[type])));\n\n            case 3:\n              result = _context.sent;\n\n              if (!result.error) {\n                _context.next = 7;\n                break;\n              }\n\n              console.log('An error occured. Handle it later.');\n              return _context.abrupt(\"return\");\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var currentValue = Number(watch(type));\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, icons[type], __jsx(\"h1\", {\n    className: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, title)), __jsx(\"button\", {\n    className: styles.close,\n    onClick: closeModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(IoIosClose, {\n    size: 25,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    className: styles.form,\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(NumberInput, {\n    errors: errors,\n    name: type,\n    placeholder: \"0\",\n    register: register,\n    validations: validations[type],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), __jsx(NumberInputControls, {\n    currentValue: currentValue,\n    defaultValue: originalValue,\n    setValue: setValue,\n    valueType: type,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: styles.submitContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(SubmitButton, {\n    text: \"Set\",\n    loading: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(UpdateNumberValue, \"BxrXarvJm5Nj9zPCTMQjGwk7Aj8=\", false, function () {\n  return [useModal, useForm];\n});\n\n_c = UpdateNumberValue;\nexport { UpdateNumberValue as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateNumberValue\");","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/modals/update-number-value/index.tsx"],"names":["React","IoIosClose","useForm","useModal","NumberInput","NumberInputControls","SubmitButton","icons","validations","styles","UpdateNumberValue","characterId","originalValue","title","type","mutation","closeModal","setResult","mode","defaultValues","register","handleSubmit","errors","setValue","watch","onSubmit","values","id","Number","result","error","console","log","currentValue","container","header","headerTitle","heading","close","formContainer","form","inputContainer","submitContainer","default"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IoIosClose } from 'react-icons/io'\nimport { useForm } from 'react-hook-form'\n\nimport { useModal } from '../../../context/modal'\nimport NumberInput from '../../form/number-input'\nimport NumberInputControls from '../../form/number-input-controls'\nimport SubmitButton from '../../form/submit-button'\nimport { Character } from '../../../generated/graphql'\n\nimport icons from './icons'\nimport validations from './validations'\nimport styles from './styles.module.css'\n\ntype FormValues = Record<string, number>\n\ntype Props = {\n  characterId: Character['id']\n  originalValue: number\n  title: string\n  type: string\n  mutation: Function\n}\n\nconst UpdateNumberValue: React.FC<Props> = ({\n  characterId,\n  originalValue,\n  title,\n  type,\n  mutation,\n}) => {\n  const { closeModal } = useModal()\n\n  const [, setResult] = mutation()\n\n  const { register, handleSubmit, errors, setValue, watch } = useForm<\n    FormValues\n  >({\n    mode: 'onSubmit',\n    defaultValues: {\n      [type]: originalValue,\n    },\n  })\n\n  const onSubmit = async (values: FormValues) => {\n    closeModal()\n\n    const result = await setResult({\n      id: characterId,\n      [type]: Number(values[type]),\n    })\n\n    if (result.error) {\n      console.log('An error occured. Handle it later.')\n      return\n    }\n  }\n\n  const currentValue = Number(watch(type))\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <div className={styles.headerTitle}>\n          {icons[type]}\n          <h1 className={styles.heading}>{title}</h1>\n        </div>\n        <button className={styles.close} onClick={closeModal}>\n          <IoIosClose size={25} />\n        </button>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\n          <div className={styles.inputContainer}>\n            <NumberInput\n              errors={errors}\n              name={type}\n              placeholder=\"0\"\n              register={register}\n              validations={validations[type]}\n            />\n            <NumberInputControls\n              currentValue={currentValue}\n              defaultValue={originalValue}\n              setValue={setValue}\n              valueType={type}\n            />\n          </div>\n\n          <div className={styles.submitContainer}>\n            <SubmitButton text=\"Set\" loading={false} />\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport { UpdateNumberValue as default }\n"]},"metadata":{},"sourceType":"module"}