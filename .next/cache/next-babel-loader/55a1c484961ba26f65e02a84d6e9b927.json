{"ast":null,"code":"import { inputObjectType } from '@nexus/schema';\nexport const UserInputType = inputObjectType({\n  name: 'UserCreateInput',\n  definition: t => {\n    t.string('email', {\n      required: true\n    });\n    t.string('password', {\n      required: true\n    });\n    t.string('passwordConfirm', {\n      required: true\n    });\n    t.string('username', {\n      required: true\n    });\n  }\n});\nexport const CharacterInputType = inputObjectType({\n  name: 'CharacterCreateInput',\n  definition: t => {\n    t.string('name', {\n      required: true\n    });\n    t.id('klassId', {\n      required: true\n    });\n    t.string('race', {\n      required: true\n    });\n    t.string('alignment', {\n      required: true\n    });\n  }\n});\nexport const CharacterUpdateInputType = inputObjectType({\n  name: 'CharacterUpdateInput',\n\n  definition(t) {\n    t.id('id', {\n      required: true\n    });\n    t.id('klassId');\n    t.id('skillId');\n    t.id('subclassId');\n    t.id('spellId');\n    t.string('name');\n    t.int('level');\n    t.string('race');\n    t.string('alignment');\n    t.int('armorClass');\n    t.int('maxHitPoints');\n    t.int('hitPoints');\n    t.int('gold');\n    t.boolean('inspiration');\n    t.int('strength');\n    t.int('dexterity');\n    t.int('constitution');\n    t.int('intelligence');\n    t.int('wisdom');\n    t.int('charisma');\n    t.int('speed');\n    t.string('spellSlots');\n  }\n\n});\nexport const CharacterEditSpellInputType = inputObjectType({\n  name: 'CharacterEditSpellInput',\n\n  definition(t) {\n    t.id('id', {\n      required: true\n    });\n    t.id('spellId', {\n      required: true\n    });\n  }\n\n});\nexport const CharacterDeleteInputType = inputObjectType({\n  name: 'CharacterDeleteInput',\n\n  definition(t) {\n    t.id('id', {\n      required: true\n    });\n  }\n\n});\nexport const CharacterAddSubclassInputType = inputObjectType({\n  name: 'CharacterAddSubclassInputType',\n\n  definition(t) {\n    t.id('id', {\n      required: true\n    });\n    t.id('subclassId', {\n      required: true\n    });\n  }\n\n});","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/server/types/resolvers/mutations/inputs.ts"],"names":["inputObjectType","UserInputType","name","definition","t","string","required","CharacterInputType","id","CharacterUpdateInputType","int","boolean","CharacterEditSpellInputType","CharacterDeleteInputType","CharacterAddSubclassInputType"],"mappings":"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","sourcesContent":["import { inputObjectType } from '@nexus/schema'\n\nexport const UserInputType = inputObjectType({\n  name: 'UserCreateInput',\n  definition: (t) => {\n    t.string('email', {\n      required: true,\n    })\n    t.string('password', {\n      required: true,\n    })\n    t.string('passwordConfirm', {\n      required: true,\n    })\n    t.string('username', {\n      required: true,\n    })\n  },\n})\n\nexport const CharacterInputType = inputObjectType({\n  name: 'CharacterCreateInput',\n  definition: (t) => {\n    t.string('name', {\n      required: true,\n    })\n    t.id('klassId', {\n      required: true,\n    })\n    t.string('race', {\n      required: true,\n    })\n    t.string('alignment', {\n      required: true,\n    })\n  },\n})\n\nexport const CharacterUpdateInputType = inputObjectType({\n  name: 'CharacterUpdateInput',\n  definition(t) {\n    t.id('id', { required: true })\n    t.id('klassId')\n    t.id('skillId')\n    t.id('subclassId')\n    t.id('spellId')\n    t.string('name')\n    t.int('level')\n    t.string('race')\n    t.string('alignment')\n    t.int('armorClass')\n    t.int('maxHitPoints')\n    t.int('hitPoints')\n    t.int('gold')\n    t.boolean('inspiration')\n    t.int('strength')\n    t.int('dexterity')\n    t.int('constitution')\n    t.int('intelligence')\n    t.int('wisdom')\n    t.int('charisma')\n    t.int('speed')\n    t.string('spellSlots')\n  },\n})\n\nexport const CharacterEditSpellInputType = inputObjectType({\n  name: 'CharacterEditSpellInput',\n  definition(t) {\n    t.id('id', { required: true })\n    t.id('spellId', { required: true })\n  },\n})\n\nexport const CharacterDeleteInputType = inputObjectType({\n  name: 'CharacterDeleteInput',\n  definition(t) {\n    t.id('id', { required: true })\n  },\n})\n\nexport const CharacterAddSubclassInputType = inputObjectType({\n  name: 'CharacterAddSubclassInputType',\n  definition(t) {\n    t.id('id', { required: true })\n    t.id('subclassId', { required: true })\n  },\n})\n"]},"metadata":{},"sourceType":"module"}