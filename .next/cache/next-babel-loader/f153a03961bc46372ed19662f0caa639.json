{"ast":null,"code":"import { queryField, stringArg } from '@nexus/schema';\nimport errors from '../../../utils/errors';\nimport { handleError } from '../../../utils/helpers';\nexport const subclasses = queryField('subclasses', {\n  type: 'SubClass',\n  args: {\n    klassName: stringArg({\n      nullable: false\n    })\n  },\n  list: true,\n  resolve: async (_, {\n    klassName\n  }, {\n    prisma\n  }) => {\n    try {\n      const subclasses = await prisma.subClass.findMany({\n        where: {\n          klass: {\n            name: {\n              contains: klassName\n            }\n          }\n        },\n        orderBy: [{\n          name: 'asc'\n        }]\n      });\n      return subclasses;\n    } catch (err) {\n      console.log(err);\n      return handleError(errors.serverError);\n    }\n  }\n});","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/server/types/resolvers/queries/subclass.ts"],"names":["queryField","stringArg","errors","handleError","subclasses","type","args","klassName","nullable","list","resolve","_","prisma","subClass","findMany","where","klass","name","contains","orderBy","err","console","log","serverError"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,eAAtC;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAMC,UAAU,GAAGJ,UAAU,CAAC,YAAD,EAAe;AACjDK,EAAAA,IAAI,EAAE,UAD2C;AAEjDC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEN,SAAS,CAAC;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAAD;AADhB,GAF2C;AAKjDC,EAAAA,IAAI,EAAE,IAL2C;AAMjDC,EAAAA,OAAO,EAAE,OAAOC,CAAP,EAAU;AAAEJ,IAAAA;AAAF,GAAV,EAAyB;AAAEK,IAAAA;AAAF,GAAzB,KAAwC;AAC/C,QAAI;AACF,YAAMR,UAAU,GAAG,MAAMQ,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyB;AAChDC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AACJC,cAAAA,QAAQ,EAAEX;AADN;AADD;AADF,SADyC;AAQhDY,QAAAA,OAAO,EAAE,CAAC;AAAEF,UAAAA,IAAI,EAAE;AAAR,SAAD;AARuC,OAAzB,CAAzB;AAWA,aAAOb,UAAP;AACD,KAbD,CAaE,OAAOgB,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAOjB,WAAW,CAACD,MAAM,CAACqB,WAAR,CAAlB;AACD;AACF;AAxBgD,CAAf,CAA7B","sourcesContent":["import { queryField, stringArg } from '@nexus/schema'\n\nimport errors from '../../../utils/errors'\nimport { handleError } from '../../../utils/helpers'\n\nexport const subclasses = queryField('subclasses', {\n  type: 'SubClass',\n  args: {\n    klassName: stringArg({ nullable: false }),\n  },\n  list: true,\n  resolve: async (_, { klassName }, { prisma }) => {\n    try {\n      const subclasses = await prisma.subClass.findMany({\n        where: {\n          klass: {\n            name: {\n              contains: klassName,\n            },\n          },\n        },\n        orderBy: [{ name: 'asc' }],\n      })\n\n      return subclasses\n    } catch (err) {\n      console.log(err)\n      return handleError(errors.serverError)\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}