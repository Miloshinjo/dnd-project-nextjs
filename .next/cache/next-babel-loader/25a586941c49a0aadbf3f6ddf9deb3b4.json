{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/character/character-sheet/screen-spells/spell-slots/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { IoMdClose } from 'react-icons/io';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\nimport useDebounce from '../../../../../hooks/useDebounce';\nimport { useSpellSlotsMutation } from '../../../../../generated/graphql';\nimport styles from './styles.module.css';\nvar slotsRaw = [];\n\nvar SpellSlots = function SpellSlots(_ref) {\n  _s();\n\n  var characterId = _ref.characterId,\n      spellSlots = _ref.spellSlots;\n\n  var _useState = useState(spellSlots),\n      slots = _useState[0],\n      setSlots = _useState[1];\n\n  var _useState2 = useState(false),\n      editSlots = _useState2[0],\n      setEditSlots = _useState2[1];\n\n  var debouncedSlots = useDebounce(slots, 500);\n\n  var _useSpellSlotsMutatio = useSpellSlotsMutation(),\n      _useSpellSlotsMutatio2 = _slicedToArray(_useSpellSlotsMutatio, 2),\n      setSpellSlots = _useSpellSlotsMutatio2[1];\n\n  useEffect(function () {\n    var slotsString = JSON.stringify(slots);\n\n    var awaitSpellSlots = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return setSpellSlots({\n                  id: characterId,\n                  spellSlots: slotsString\n                });\n\n              case 2:\n                result = _context.sent;\n\n                if (!result.error) {\n                  _context.next = 6;\n                  break;\n                }\n\n                console.log('An error occured. Handle it later.');\n                return _context.abrupt(\"return\");\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function awaitSpellSlots() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    awaitSpellSlots();\n  }, [debouncedSlots]);\n\n  var toggleSlot = function toggleSlot(targetSlotLevelIndex, targeSlotIndex) {\n    var newSlots = slots.map(function (levelSlot, slotLevelsIndex) {\n      if (slotLevelsIndex !== targetSlotLevelIndex) return levelSlot;\n      return levelSlot.map(function (slot, index) {\n        if (index !== targeSlotIndex) return slot;\n        return !slot;\n      });\n    });\n    setSlots(newSlots);\n  };\n\n  var addLevel = function addLevel() {\n    setSlots([].concat(_toConsumableArray(slots), [[false]]));\n  };\n\n  var removeLevel = function removeLevel() {\n    var newSlots = slots.filter(function (_, index, arr) {\n      return index !== arr.length - 1;\n    });\n    setSlots(newSlots);\n  };\n\n  var addSlot = function addSlot(targetSlotLevelIndex) {\n    var newSlots = slots.map(function (levelSlot, slotLevelsIndex) {\n      if (slotLevelsIndex !== targetSlotLevelIndex) return levelSlot;\n      return [].concat(_toConsumableArray(levelSlot), [false]);\n    });\n    setSlots(newSlots);\n  };\n\n  var removeSlot = function removeSlot(targetSlotLevelIndex) {\n    var newSlots = slots.map(function (levelSlot, slotLevelsIndex) {\n      if (slotLevelsIndex !== targetSlotLevelIndex) return levelSlot;\n      var newlevelSlot = levelSlot.filter(function (_, index, arr) {\n        return index !== arr.length - 1;\n      });\n      return newlevelSlot;\n    });\n    setSlots(newSlots);\n  };\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"p-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"flex items-center px-4 justify-between mb-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(\"h4\", {\n    className: \"text-center text-sm font-medium text-gray-600\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Spell Slots\"), __jsx(\"button\", {\n    className: editSlots ? styles.slotsEditButtonActive : styles.slotsEditButton,\n    onClick: function onClick() {\n      return setEditSlots(!editSlots);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Edit Slots\")), __jsx(\"div\", {\n    className: \"px-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, slots.length ? slots.map(function (levelSlot, slotLevelsIndex) {\n    return __jsx(\"div\", {\n      key: Math.random(),\n      className: styles.slotLevelContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, editSlots && __jsx(\"button\", {\n      className: styles.removeSlotButton,\n      onClick: function onClick() {\n        return removeSlot(slotLevelsIndex);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, __jsx(FaMinus, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }\n    })), __jsx(\"div\", {\n      className: styles.slotLevelText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, slotLevelsIndex + 1), __jsx(\"div\", {\n      className: \"flex flex-wrap mx-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, levelSlot.map(function (slot, index) {\n      return __jsx(\"button\", {\n        key: Math.random(),\n        className: styles.spellSlotButton,\n        onClick: function onClick() {\n          return toggleSlot(slotLevelsIndex, index);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, slot ? __jsx(IoMdClose, {\n        size: 23,\n        color: \"#1a202c\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      }) : null);\n    })), editSlots && __jsx(\"button\", {\n      className: \"ml-auto text-gray-400\",\n      onClick: function onClick() {\n        return addSlot(slotLevelsIndex);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, __jsx(FaPlus, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 23\n      }\n    })));\n  }) : __jsx(\"div\", {\n    className: \"text-gray-600\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"----\")), editSlots && __jsx(\"div\", {\n    className: \"mt-10 flex flex-col items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"Add/Remove spell levels\", __jsx(\"div\", {\n    className: \"flex mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"mr-4 text-gray-400\",\n    onClick: removeLevel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, __jsx(FaMinus, {\n    size: 35,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  })), __jsx(\"button\", {\n    className: \"text-gray-400\",\n    onClick: addLevel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, __jsx(FaPlus, {\n    size: 35,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }))))));\n};\n\n_s(SpellSlots, \"3XzzJYm0Me5ijl98t/UxOGUzfU4=\", false, function () {\n  return [useDebounce, useSpellSlotsMutation];\n});\n\n_c = SpellSlots;\nexport { SpellSlots as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"SpellSlots\");","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/character/character-sheet/screen-spells/spell-slots/index.tsx"],"names":["useState","useEffect","IoMdClose","FaPlus","FaMinus","useDebounce","useSpellSlotsMutation","styles","slotsRaw","SpellSlots","characterId","spellSlots","slots","setSlots","editSlots","setEditSlots","debouncedSlots","setSpellSlots","slotsString","JSON","stringify","awaitSpellSlots","id","result","error","console","log","toggleSlot","targetSlotLevelIndex","targeSlotIndex","newSlots","map","levelSlot","slotLevelsIndex","slot","index","addLevel","removeLevel","filter","_","arr","length","addSlot","removeSlot","newlevelSlot","container","slotsEditButtonActive","slotsEditButton","Math","random","slotLevelContainer","removeSlotButton","slotLevelText","spellSlotButton","default"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\n\nimport { IoMdClose } from 'react-icons/io'\nimport { FaPlus, FaMinus } from 'react-icons/fa'\nimport useDebounce from '../../../../../hooks/useDebounce'\nimport { useSpellSlotsMutation } from '../../../../../generated/graphql'\nimport { CharacterUI } from '../../../../../models/character'\n\nimport styles from './styles.module.css'\n\nconst slotsRaw = []\n\ntype Props = {\n  characterId: CharacterUI['id']\n  spellSlots: Array<Array<boolean>>\n}\n\nconst SpellSlots: React.FC<Props> = ({ characterId, spellSlots }) => {\n  const [slots, setSlots] = useState(spellSlots)\n  const [editSlots, setEditSlots] = useState<boolean>(false)\n\n  const debouncedSlots = useDebounce(slots, 500)\n\n  const [, setSpellSlots] = useSpellSlotsMutation()\n\n  useEffect(() => {\n    const slotsString = JSON.stringify(slots)\n\n    const awaitSpellSlots = async () => {\n      const result = await setSpellSlots({\n        id: characterId,\n        spellSlots: slotsString,\n      })\n\n      if (result.error) {\n        console.log('An error occured. Handle it later.')\n        return\n      }\n    }\n\n    awaitSpellSlots()\n  }, [debouncedSlots])\n\n  const toggleSlot = (\n    targetSlotLevelIndex: number,\n    targeSlotIndex: number,\n  ): void => {\n    const newSlots = slots.map((levelSlot, slotLevelsIndex) => {\n      if (slotLevelsIndex !== targetSlotLevelIndex) return levelSlot\n\n      return levelSlot.map((slot, index) => {\n        if (index !== targeSlotIndex) return slot\n        return !slot\n      })\n    })\n\n    setSlots(newSlots)\n  }\n\n  const addLevel = (): void => {\n    setSlots([...slots, [false]])\n  }\n\n  const removeLevel = (): void => {\n    const newSlots = slots.filter((_, index, arr) => {\n      return index !== arr.length - 1\n    })\n\n    setSlots(newSlots)\n  }\n\n  const addSlot = (targetSlotLevelIndex: number): void => {\n    const newSlots = slots.map((levelSlot, slotLevelsIndex) => {\n      if (slotLevelsIndex !== targetSlotLevelIndex) return levelSlot\n\n      return [...levelSlot, false]\n    })\n\n    setSlots(newSlots)\n  }\n\n  const removeSlot = (targetSlotLevelIndex: number): void => {\n    const newSlots = slots.map((levelSlot, slotLevelsIndex) => {\n      if (slotLevelsIndex !== targetSlotLevelIndex) return levelSlot\n\n      const newlevelSlot = levelSlot.filter((_, index, arr) => {\n        return index !== arr.length - 1\n      })\n\n      return newlevelSlot\n    })\n\n    setSlots(newSlots)\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className=\"p-2\">\n        <div className=\"flex items-center px-4 justify-between mb-6\">\n          <h4 className=\"text-center text-sm font-medium text-gray-600\">\n            Spell Slots\n          </h4>\n          <button\n            className={\n              editSlots ? styles.slotsEditButtonActive : styles.slotsEditButton\n            }\n            onClick={() => setEditSlots(!editSlots)}\n          >\n            Edit Slots\n          </button>\n        </div>\n        <div className=\"px-4\">\n          {slots.length ? (\n            slots.map((levelSlot, slotLevelsIndex) => {\n              return (\n                <div key={Math.random()} className={styles.slotLevelContainer}>\n                  {editSlots && (\n                    <button\n                      className={styles.removeSlotButton}\n                      onClick={() => removeSlot(slotLevelsIndex)}\n                    >\n                      <FaMinus />\n                    </button>\n                  )}\n\n                  <div className={styles.slotLevelText}>\n                    {slotLevelsIndex + 1}\n                  </div>\n                  <div className=\"flex flex-wrap mx-2\">\n                    {levelSlot.map((slot, index) => {\n                      return (\n                        <button\n                          key={Math.random()}\n                          className={styles.spellSlotButton}\n                          onClick={() => toggleSlot(slotLevelsIndex, index)}\n                        >\n                          {slot ? (\n                            <IoMdClose size={23} color=\"#1a202c\" />\n                          ) : null}\n                        </button>\n                      )\n                    })}\n                  </div>\n                  {editSlots && (\n                    <button\n                      className=\"ml-auto text-gray-400\"\n                      onClick={() => addSlot(slotLevelsIndex)}\n                    >\n                      <FaPlus />\n                    </button>\n                  )}\n                </div>\n              )\n            })\n          ) : (\n            <div className=\"text-gray-600\">----</div>\n          )}\n        </div>\n        {editSlots && (\n          <div className=\"mt-10 flex flex-col items-center\">\n            Add/Remove spell levels\n            <div className=\"flex mt-4\">\n              <button className=\"mr-4 text-gray-400\" onClick={removeLevel}>\n                <FaMinus size={35} />\n              </button>\n              <button className=\"text-gray-400\" onClick={addLevel}>\n                <FaPlus size={35} />\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport { SpellSlots as default }\n"]},"metadata":{},"sourceType":"module"}