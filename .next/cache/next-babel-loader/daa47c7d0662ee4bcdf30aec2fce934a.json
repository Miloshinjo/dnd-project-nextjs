{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/character/character-sheet/screen-skills/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { motion } from 'framer-motion';\nimport { useSkillMutation } from '../../../../generated/graphql';\nimport { calculateSkill, abilityScoreM, proficiencyBonus } from '../../../../utils/character';\nimport styles from './styles.module.css';\nvar screenVariants = {\n  initial: {\n    x: '100vw'\n  },\n  animate: {\n    x: '0',\n    transition: {\n      duration: 0.3,\n      ease: 'easeIn'\n    }\n  }\n};\n\nvar ScreenSkills = function ScreenSkills(_ref) {\n  _s();\n\n  var character = _ref.character,\n      skills = _ref.skills;\n\n  var _useSkillMutation = useSkillMutation(),\n      _useSkillMutation2 = _slicedToArray(_useSkillMutation, 2),\n      skillMutationResult = _useSkillMutation2[0],\n      toggleSkill = _useSkillMutation2[1];\n\n  return __jsx(motion.div, {\n    variants: screenVariants,\n    animate: \"animate\",\n    initial: \"initial\",\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, skills.map(function (skill) {\n    var isProficient = !!character.skills.find(function (el) {\n      return el.id === skill.id;\n    });\n    return __jsx(motion.button, {\n      key: skill.id,\n      className: isProficient ? styles.skillContainerProficient : styles.skillContainer,\n      type: \"button\",\n      onClick: function onClick() {\n        toggleSkill({\n          id: character.id,\n          skillId: skill.id\n        });\n      },\n      disabled: skillMutationResult.fetching,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: styles.infoWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"w-3 h-3 rounded-full border-red-900 border mr-2 \".concat(isProficient ? 'bg-red-900 ' : ''),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      className: styles.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, skill.name), __jsx(\"div\", {\n      className: styles.ability,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, skill.ability.substring(0, 3))), __jsx(\"div\", {\n      className: styles.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, calculateSkill(isProficient, abilityScoreM(character[skill.ability]), proficiencyBonus(character.level))));\n  }));\n};\n\n_s(ScreenSkills, \"0RdUMGwx0RwWhprwi8sw3bGN4+k=\", false, function () {\n  return [useSkillMutation];\n});\n\n_c = ScreenSkills;\nexport { ScreenSkills as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"ScreenSkills\");","map":{"version":3,"sources":["/Users/milosdzeletovic/projects/me/dnd-armory/dnd-armory-next/components/character/character-sheet/screen-skills/index.tsx"],"names":["motion","useSkillMutation","calculateSkill","abilityScoreM","proficiencyBonus","styles","screenVariants","initial","x","animate","transition","duration","ease","ScreenSkills","character","skills","skillMutationResult","toggleSkill","container","map","skill","isProficient","find","el","id","skillContainerProficient","skillContainer","skillId","fetching","infoWrapper","name","ability","substring","value","level","default"],"mappings":"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","sourcesContent":["import { CharacterUI } from '../../../../models/character'\n\nimport { motion } from 'framer-motion'\n\nimport {\n  useSkillsQuery,\n  useSkillMutation,\n  Skill,\n} from '../../../../generated/graphql'\nimport {\n  calculateSkill,\n  abilityScoreM,\n  proficiencyBonus,\n} from '../../../../utils/character'\n\nimport styles from './styles.module.css'\n\nconst screenVariants = {\n  initial: { x: '100vw' },\n  animate: {\n    x: '0',\n    transition: { duration: 0.3, ease: 'easeIn' },\n  },\n}\n\ntype Props = {\n  character: CharacterUI\n  skills: Array<Skill>\n}\n\nconst ScreenSkills: React.FC<Props> = ({ character, skills }) => {\n  const [skillMutationResult, toggleSkill] = useSkillMutation()\n\n  return (\n    <motion.div\n      variants={screenVariants}\n      animate=\"animate\"\n      initial=\"initial\"\n      className={styles.container}\n    >\n      {skills.map((skill) => {\n        const isProficient = !!character.skills.find((el) => el.id === skill.id)\n\n        return (\n          <motion.button\n            key={skill.id}\n            className={\n              isProficient\n                ? styles.skillContainerProficient\n                : styles.skillContainer\n            }\n            type=\"button\"\n            onClick={() => {\n              toggleSkill({ id: character.id, skillId: skill.id })\n            }}\n            disabled={skillMutationResult.fetching}\n          >\n            <div className={styles.infoWrapper}>\n              <div\n                className={`w-3 h-3 rounded-full border-red-900 border mr-2 ${\n                  isProficient ? 'bg-red-900 ' : ''\n                }`}\n              ></div>\n\n              <div className={styles.name}>{skill.name}</div>\n              <div className={styles.ability}>\n                {skill.ability.substring(0, 3)}\n              </div>\n            </div>\n            <div className={styles.value}>\n              {calculateSkill(\n                isProficient,\n                abilityScoreM(character[skill.ability]),\n                proficiencyBonus(character.level),\n              )}\n            </div>\n          </motion.button>\n        )\n      })}\n    </motion.div>\n  )\n}\n\nexport { ScreenSkills as default }\n"]},"metadata":{},"sourceType":"module"}